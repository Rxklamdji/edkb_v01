[{"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\index.js":"1","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\App.jsx":"2","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\routes\\Home.jsx":"3","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\routes\\UpdatePage.jsx":"4","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\components\\Header.jsx":"5","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\context\\CompoundsContext.js":"6","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\routes\\CompoundDetailPage.jsx":"7","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\components\\CompoundList.jsx":"8","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\components\\UpdateCompound.jsx":"9","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\components\\AddCompound.jsx":"10","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\apis\\CompoundFinder.js":"11"},{"size":158,"mtime":1620842282848,"results":"12","hashOfConfig":"13"},{"size":914,"mtime":1624943516415,"results":"14","hashOfConfig":"13"},{"size":385,"mtime":1624919571412,"results":"15","hashOfConfig":"13"},{"size":298,"mtime":1624919571411,"results":"16","hashOfConfig":"13"},{"size":225,"mtime":1624919571413,"results":"17","hashOfConfig":"13"},{"size":515,"mtime":1624919571412,"results":"18","hashOfConfig":"13"},{"size":182,"mtime":1624919571412,"results":"19","hashOfConfig":"13"},{"size":4246,"mtime":1624920181567,"results":"20","hashOfConfig":"13"},{"size":6997,"mtime":1624919571412,"results":"21","hashOfConfig":"13"},{"size":6512,"mtime":1624919571413,"results":"22","hashOfConfig":"13"},{"size":527,"mtime":1628015110589,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"erwftc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\index.js",[],["49","50"],"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\App.jsx",[],"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\routes\\Home.jsx",[],"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\routes\\UpdatePage.jsx",[],"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\components\\Header.jsx",[],"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\context\\CompoundsContext.js",[],"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\routes\\CompoundDetailPage.jsx",[],"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\components\\CompoundList.jsx",["51","52"],"import React, {useEffect, useContext} from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport CompoundFinder from \"../apis/CompoundFinder\";\r\nimport { CompoundsContext } from '../context/CompoundsContext';\r\n\r\nconst CompoundList = (props) => {\r\n\r\n    const {compounds, setCompounds}= useContext(CompoundsContext);\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(() =>{\r\n\r\n        const fetchData = async () => {\r\n            \r\n        try {\r\n            const response = await CompoundFinder.get(\"/\")\r\n            setCompounds(response.data.data.compounds);\r\n        } catch (err) {}\r\n\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n\r\n    const handleDelete = async (id) => {\r\n\r\n        try {\r\n            const response = await CompoundFinder.delete(`/${id}`);\r\n            setCompounds(compounds.filter(compound => {\r\n                return compound.id !== id;\r\n            }));\r\n        } catch (err) {}\r\n\r\n    };\r\n\r\n\r\n    const handleUpdate = (id) => {\r\n        history.push(`/compounds/${id}/update`);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"list-group\">\r\n\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr className=\"bg-primary\">\r\n                    <th scope=\"col\">Compound_ID</th>\r\n                        <th scope=\"col\">Compound_Name</th>\r\n                        <th scope=\"col\">EnDPoint_Value</th>\r\n                        <th scope=\"col\">EnDPoint_Name</th>\r\n                        <th scope=\"col\">Assay_Name</th>\r\n                        <th scope=\"col\">Species_Strain</th>\r\n                        <th scope=\"col\">Cas_Number</th>\r\n                        <th scope=\"col\">FMLA</th>\r\n                        <th scope=\"col\">Molecular_Weight</th>\r\n                        <th scope=\"col\">Authors</th>\r\n                        <th scope=\"col\">TiTle</th>\r\n                        <th scope=\"col\">Volume_Number</th>\r\n                        <th scope=\"col\">Start_Page</th>\r\n                        <th scope=\"col\">Year</th>\r\n                        <th scope=\"col\">EDIT</th>\r\n                        <th scope=\"col\">CLEAR</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n\r\n                    {compounds && compounds.map((compound) => {\r\n                        return (\r\n                        <tr key={compound.id}>\r\n                            <td>{compound.id}</td>\r\n                            <td>{compound.compound_name}</td>\r\n                            <td>{compound.endpoint_value}</td>\r\n                            <td>{compound.endpoint_name}</td>\r\n                            <td>{compound.assay_name}</td>\r\n                            <td>{compound.species_strain}</td>\r\n                            <td>{compound.cas_number}</td>\r\n                            <td>{compound.fmla}</td>\r\n                            <td>{compound.molecular_weight}</td>\r\n                            <td>{compound.authors}</td>\r\n                            <td>{compound.title}</td>\r\n                            <td>{compound.volume_number}</td>\r\n                            <td>{compound.start_page}</td>\r\n                            <td>{compound.year}</td>\r\n                            <td><button onClick={ () => handleUpdate(compound.id)} className=\"btn btn-warning\">EDIT</button></td>\r\n                            <td><button onClick={ () => handleDelete(compound.id)} className=\"btn btn-danger\">DELETE</button></td>\r\n                        </tr>\r\n                        );\r\n                    })}\r\n\r\n                   {/* <tr>\r\n                        <td>6128</td>\r\n                        <td>Methylstyrol</td>\r\n                        <td>-4.52</td>\r\n                        <td>Human</td>\r\n                        <td>118.18</td>\r\n                        <td>J.Health</td>\r\n                        <td>46</td>\r\n                        <td>282</td>\r\n                        <td>2000</td>\r\n                        <td><button className=\"btn btn-warning\">EDIT</button></td>\r\n                        <td><button className=\"btn btn-danger\">DELETE</button></td>\r\n                    </tr> */ }\r\n                </tbody>\r\n\r\n            </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompoundList\r\n","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\components\\UpdateCompound.jsx",["53","54"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport CompoundFinder from '../apis/CompoundFinder';\r\nimport { CompoundsContext } from '../context/CompoundsContext';\r\n\r\nconst UpdateCompound = (props) => {\r\n\r\n    const {id} = useParams();\r\n    const {compounds} = useContext(CompoundsContext);\r\n    let history = useHistory();\r\n\r\n    const [compound_name, setCompound_Name] = useState (\"\");\r\n    const [endpoint_value, setEndpoint_Value] = useState (\"\");\r\n    const [endpoint_name, setEndpoint_Name] = useState (\"\");\r\n    const [assay_name, setAssay_Name] = useState (\"\");\r\n    const [species_strain, setSpecies_Strain] = useState (\"\");\r\n    const [cas_number, setCas_Number] = useState (\"\");\r\n    const [fmla, setFmla] = useState (\"\");\r\n    const [molecular_weight, setMolecular_Weight] = useState (\"\");\r\n    const [authors, setAuthors] = useState (\"\");\r\n    const [title, setTitle] = useState (\"\");\r\n    const [volume_number, setVolume_Number] = useState (\"\");\r\n    const [start_page, setStart_Page] = useState (\"\");\r\n    const [year, setYear] = useState (\"\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await CompoundFinder.get(`/${id}`);\r\n            console.log(response.data.data);\r\n            setCompound_Name(response.data.data.compound.compound_name);\r\n            setEndpoint_Value(response.data.data.compound.endpoint_value);\r\n            setEndpoint_Name(response.data.data.compound.endpoint_name);\r\n            setAssay_Name(response.data.data.compound.assay_name);\r\n            setSpecies_Strain(response.data.data.compound.species_strain);\r\n            setCas_Number(response.data.data.compound.cas_number);\r\n            setFmla(response.data.data.compound.fmla);\r\n            setMolecular_Weight(response.data.data.compound.molecular_weight);\r\n            setAuthors(response.data.data.compound.authors);\r\n            setTitle(response.data.data.compound.title);\r\n            setVolume_Number(response.data.data.compound.volume_number);\r\n            setStart_Page(response.data.data.compound.start_page);\r\n            setYear(response.data.data.compound.year);  \r\n            \r\n           \r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        \r\n        const updatedCompound = await CompoundFinder.put(`/${id}`, {\r\n                compound_name,\r\n                endpoint_value,\r\n                endpoint_name,\r\n                assay_name,\r\n                species_strain,\r\n                cas_number,\r\n                fmla,\r\n                molecular_weight,\r\n                authors,\r\n                title,\r\n                volume_number,\r\n                start_page,\r\n                year,   \r\n            \r\n        });\r\n        console.log(updatedCompound);\r\n        history.push(\"/\");\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <form action=\"\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"compound_name\">Compound_Name</label>\r\n                    <input value={compound_name} onChange={(e) => setCompound_Name(e.target.value)} id=\"compound_name\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"endpoint_value\">Endpoint_Value</label>\r\n                    <input value={endpoint_value} onChange={(e) => setEndpoint_Value(e.target.value)} id=\"endpoint_value\" className=\"form-control\" type=\"float\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"endpoint_name\">Endpoint_Name</label>\r\n                    <input value={endpoint_name} onChange={(e) => setEndpoint_Name(e.target.value)} id=\"endpoint_name\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"assay_name\">Assay_Name</label>\r\n                    <input value={assay_name} onChange={(e) => setAssay_Name(e.target.value)} id=\"assay_name\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"species_strain\">Species_Strain</label>\r\n                    <input value={species_strain} onChange={(e) => setSpecies_Strain(e.target.value)} id=\"species_strain\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"cas_number\">Cas_Number</label>\r\n                    <input value={cas_number} onChange={(e) => setCas_Number(e.target.value)} id=\"cas_number\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"fmla\">Fmla</label>\r\n                    <input value={fmla} onChange={(e) => setFmla(e.target.value)} id=\"fmla\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"molecular_weight\">Molecular_Weight</label>\r\n                    <input value={molecular_weight} onChange={(e) => setMolecular_Weight(e.target.value)} id=\"molecular_weight\" className=\"form-control\" type=\"float\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"Author\">Author</label>\r\n                    <input value={authors} onChange={(e) => setAuthors(e.target.value)} id=\"authors\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input value={title} onChange={(e) => setTitle(e.target.value)} id=\"title\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"volume_number\">Volume_Number</label>\r\n                    <input value={volume_number} onChange={(e) => setVolume_Number(e.target.value)} id=\"volume_number\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"start_page\">Start_Page</label>\r\n                    <input value={start_page} onChange={(e) => setStart_Page(e.target.value)} id=\"start_page\" className=\"form-control\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"year\">Year</label>\r\n                    <input value={year} onChange={(e) => setYear(e.target.value)} id=\"year\" className=\"form-control\" type=\"int\" />\r\n                </div>\r\n\r\n                <button onClick={handleSubmit} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateCompound;\r\n","C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\components\\AddCompound.jsx",[],"C:\\Users\\jh_ho\\Desktop\\cmp - Copy\\client\\src\\apis\\CompoundFinder.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":25,"column":8,"nodeType":"61","endLine":25,"endColumn":10,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":31,"column":19,"nodeType":"65","messageId":"66","endLine":31,"endColumn":27},{"ruleId":"63","severity":1,"message":"67","line":9,"column":12,"nodeType":"65","messageId":"66","endLine":9,"endColumn":21},{"ruleId":"59","severity":1,"message":"68","line":48,"column":8,"nodeType":"61","endLine":48,"endColumn":10,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCompounds'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'compounds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [setCompounds]",{"range":"78","text":"79"},"Update the dependencies array to be: [id]",{"range":"80","text":"81"},[643,645],"[setCompounds]",[2277,2279],"[id]"]